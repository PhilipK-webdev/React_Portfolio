{"version":3,"sources":["images/MySelf.jpg","component/Header.js","component/About.js","component/Home.js","component/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","typographyStyles","flex","color","Header","classes","AppBar","position","Toolbar","Typography","className","variant","to","style","textDecoration","About","Home","Grid","container","direction","item","xs","sm","margin","Footer","Copyright","Link","href","Date","getFullYear","theme","root","display","flexDirection","minHeight","main","marginTop","spacing","marginBottom","footer","padding","backgroundColor","palette","type","grey","s","Container","maxWidth","App","img","images","exact","path","component","title","subheader","bio","avatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f92776f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MySelf.84c1b183.jpg\";","import React from \"react\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\nimport AlbumIcon from '@material-ui/icons/Album';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    typographyStyles: {\r\n        flex: 1,\r\n        color: \"white\"\r\n    },\r\n}));\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <nav>\r\n            <AppBar position=\"static\" >\r\n                <Toolbar >\r\n                    <Typography className={classes.typographyStyles} variant=\"h4\" >\r\n                        <Link to=\"/\" style={{ color: \"white\", textDecoration: \"none\" }}>\r\n                            Kouhcner Philip\r\n                            </Link>\r\n                    </Typography>\r\n                    <div>\r\n                        <Link to=\"/\" style={{ color: \"white\" }} >\r\n                            <HomeIcon />\r\n                        </Link>\r\n                        <Link to=\"/portfolio\" style={{ color: \"white\" }}>\r\n                            <AlbumIcon />\r\n                        </Link>\r\n                        <Link to=\"/about\" style={{ color: \"white\" }}>\r\n                            <ContactMailIcon />\r\n                        </Link>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1>Hello from about</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <Grid container direction=\"column\">\r\n            <Grid item container>\r\n                <Grid item xs={false} sm={2} />\r\n                <Grid item xs={12} sm={8} style={{ margin: \"10px\" }}>\r\n                </Grid>\r\n                <Grid item xs={false} sm={2} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nconst Footer = () => {\r\n\r\n    function Copyright() {\r\n        return (\r\n            <Typography variant=\"body2\" color=\"textPrimary\">\r\n                {'Copyright Â© '}\r\n                <Link color=\"inherit\" href=\"https://github.com/PhilipK-webdev\">\r\n                    My Github\r\n      </Link>{' '}\r\n                {new Date().getFullYear()}\r\n                {'.'}\r\n            </Typography>\r\n        );\r\n    }\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            minHeight: '100vh',\r\n        },\r\n        main: {\r\n            marginTop: theme.spacing(8),\r\n            marginBottom: theme.spacing(2),\r\n        },\r\n        footer: {\r\n            padding: theme.spacing(3, 2),\r\n            marginTop: 'auto',\r\n            backgroundColor:\r\n                theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root} s>\r\n            <footer footer className={classes.footer}>\r\n                <Container maxWidth=\"sm\">\r\n                    <Typography variant=\"body1\">Philp Kouchner</Typography>\r\n                    <Copyright />\r\n                </Container>\r\n            </footer>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Footer\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from './component/Header';\nimport About from './component/About'\n// import Portfolio from './component/Portfolio';\nimport Home from './component/Home';\nimport images from './images/MySelf.jpg'\nimport Footer from './component/Footer';\n\n\nfunction App() {\n  const title = \"Kouchner Philip\";\n  const subheader = \"Full Stack Web Developer\";\n  const img = images;\n  const bio = \"Currently studying at Berkley Extension as Full-Stack Web Developer.Looking for my new challenge in frontend, backend or Both. I'm a fast learner with excellent background in computers I like to learn new technologies and expand my knowledge in a variety of fields\";\n  const avatar = \"ðŸ˜Ž\";\n\n\n\n  return (\n    <div className=\"App\" >\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} ><Home title={title} subheader={subheader} img={img} bio={bio} avatar={avatar} /></Route>\n          {/* <Route exact path=\"/portfolio\" component={Portfolio} /> */}\n          <Route exact path=\"/about\" component={About} />\n        </Switch>\n        <Footer />\n      </Router>\n    </div >\n  )\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}