{"version":3,"sources":["images/groupProject.PNG","images/Gif-project.PNG","images/mySQL.PNG","images/weather.PNG","images/work-day.PNG","images/MySelf.jpg","component/Header.js","component/About.js","component/CardHome.js","component/Portfolio.js","component/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","typographyStyles","flex","color","Header","classes","AppBar","position","Toolbar","Typography","className","variant","to","style","textDecoration","About","CardHome","props","title","subheader","img","bio","avatar","Card","CardHeader","Avatar","aria-label","action","IconButton","CardMedia","height","width","image","CardContent","component","Portfolio","arrayImg","push","imageGif","imageGroup","imageMySQL","imageWeather","imageWorkDay","Grid","container","spacing","map","index","item","xs","sm","key","displayCard","Home","images","direction","margin","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.89754fe7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/groupProject.32d1ad9c.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Gif-project.403a5165.PNG\";","module.exports = __webpack_public_path__ + \"static/media/mySQL.371f45ff.PNG\";","module.exports = __webpack_public_path__ + \"static/media/weather.b12a22ec.PNG\";","module.exports = __webpack_public_path__ + \"static/media/work-day.de295ede.PNG\";","module.exports = __webpack_public_path__ + \"static/media/MySelf.84c1b183.jpg\";","import React from \"react\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\nimport AlbumIcon from '@material-ui/icons/Album';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    typographyStyles: {\r\n        flex: 1,\r\n        color: \"white\"\r\n    },\r\n}));\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <nav>\r\n            <AppBar position=\"static\" >\r\n                <Toolbar >\r\n                    <Typography className={classes.typographyStyles} variant=\"h4\" >\r\n                        <Link to=\"/\" style={{ color: \"white\", textDecoration: \"none\" }}>\r\n                            Kouhcner Philip\r\n                            </Link>\r\n                    </Typography>\r\n                    <div>\r\n                        <Link to=\"/\" style={{ color: \"white\" }} >\r\n                            <HomeIcon />\r\n                        </Link>\r\n                        <Link to=\"/portfolio\" style={{ color: \"white\" }}>\r\n                            <AlbumIcon />\r\n                        </Link>\r\n                        <Link to=\"/about\" style={{ color: \"white\" }}>\r\n                            <ContactMailIcon />\r\n                        </Link>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h1>Hello from about</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\r\nimport { Avatar, IconButton, CardMedia } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst CardHome = (props) => {\r\n    const { title, subheader, img, bio, avatar } = props;\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"name\">\r\n                        <span>{avatar}</span> </Avatar>\r\n                }\r\n                action={\r\n                    <IconButton aria-label=\"settings\">\r\n                        <CardMembershipIcon />\r\n                    </IconButton>\r\n                }\r\n                title={title}\r\n                subheader={subheader}\r\n            />\r\n            <CardMedia style={{ height: \"400px\", width: \"auto\" }} image={img} />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    {bio}\r\n                </Typography>\r\n            </CardContent >\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CardHome\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport CardHome from \"./CardHome\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport imageGroup from '../images/groupProject.PNG';\r\nimport imageGif from '../images/Gif-project.PNG';\r\nimport imageMySQL from '../images/mySQL.PNG';\r\nimport imageWeather from '../images/weather.PNG';\r\nimport imageWorkDay from '../images/work-day.PNG';\r\n\r\n\r\nconst Portfolio = () => {\r\n    const arrayImg = [];\r\n    arrayImg.push(imageGif);\r\n    arrayImg.push(imageGroup);\r\n    arrayImg.push(imageMySQL);\r\n    arrayImg.push(imageWeather);\r\n    arrayImg.push(imageWorkDay);\r\n\r\n    const displayCard = (img, index) => {\r\n        return (\r\n            <Grid item xs={12} sm={6}>\r\n                <CardHome key={index} img={img} />\r\n            </Grid>\r\n        )\r\n    }\r\n    return (\r\n        <Grid container spacing={2}>\r\n            {arrayImg.map((img, index) => displayCard(img, index))}\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nexport default Portfolio;\r\n","import React from 'react'\r\nimport { Grid } from \"@material-ui/core\";\r\nimport CardHome from './CardHome';\r\nimport images from '../images/MySelf.jpg'\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const title = \"Kouchner Philip\";\r\n    const subheader = \"Full Stack Web Developer\";\r\n    const img = images;\r\n    const bio = \"Currently studying at Berkley Extension as Full-Stack Web Developer.Looking for my new challenge in frontend, backend or Both. I'm a fast learner with excellent background in computers I like to learn new technologies and expand my knowledge in a variety of fields\";\r\n    const avatar = \"ðŸ˜Ž\";\r\n    return (\r\n        <Grid container direction=\"column\">\r\n            <Grid item container>\r\n                <Grid item xs={false} sm={2} />\r\n                <Grid item xs={12} sm={8} style={{ margin: \"10px\" }}>\r\n                    <CardHome title={title} subheader={subheader} img={img} bio={bio} avatar={avatar} />\r\n                </Grid>\r\n                <Grid item xs={false} sm={2} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from './component/Header';\nimport About from './component/About'\nimport Portfolio from './component/Portfolio';\nimport Home from './component/Home';\n\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/portfolio\" component={Portfolio} />\n          <Route exact path=\"/about\" component={About} />\n        </Switch>\n      </Router>\n    </div >\n  )\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}